Niklaus Wirth
Niklaus Emil Wirth (born 15 February 1934) is a Swiss computer scientist, best known for designing several programming languages, including Pascal, and for pioneering several classic topics in software engineering. In 1984 he won the Turing Award for developing a sequence of innovative computer languages.


== Biography ==
Wirth was born in Winterthur, Switzerland, in 1934. In 1959 he earned a degree in Electronics Engineering from the Swiss Federal Institute of Technology Zürich (ETH Zürich). In 1960 he earned an M.Sc. from Université Laval, Canada. Then in 1963 he was awarded a Ph.D. in Electrical Engineering and Computer Science (EECS) from the University of California, Berkeley, supervised by the computer designer pioneer Harry Huskey.
From 1963 to 1967 he served as assistant professor of Computer Science at Stanford University and again at the University of Zurich. Then in 1968 he became Professor of Informatics at ETH Zürich, taking two one-year sabbaticals at Xerox PARC in California (1976–1977 and 1984–1985). Wirth retired in 1999.
In 2004, he was made a Fellow of the Computer History Museum "for seminal work in programming languages and algorithms, including Euler, Algol-W, Pascal, Modula, and Oberon."


== Programming languages ==

Wirth was the chief designer of the programming languages Euler, Algol W, Pascal, Modula, Modula-2, Oberon, Oberon-2, and Oberon-07. He was also a major part of the design and implementation team for the Lilith and Oberon operating systems, and for the Lola digital hardware design and simulation system. He received the ACM Turing Award for the development of these languages in 1984 and in 1994 he was inducted as a Fellow of the ACM. He designed the simple programming language PL/0 to illustrate compiler design. It has formed the basis for many university compiler design classes.


== Notable publications ==
His book The Pascal User Manual And Report, served as the basis of many language implementation efforts in the 1970s and 1980s in the United States and across Europe.
His article Program Development by Stepwise Refinement, about the teaching of programming, is considered to be a classic text in software engineering. In 1975 he wrote the book Algorithms + Data Structures = Programs, which gained wide recognition. Major revisions of this book with the new title Algorithms + Data Structures were published in 1985 and 2004. The examples in the first edition were written in Pascal. These were replaced in the later editions with examples written in Modula-2 and Oberon respectively.
His textbook Systematic Programming: An Introduction was considered a good source for students who wanted to do more than "just coding." Regarded as a challenging text to work through, it was sought as imperative reading for those interested in numerical mathematics.


== Wirth's law ==

In 1995, he popularized the adage now known as Wirth's law: "Software is getting slower more rapidly than hardware becomes faster." In his 1995 paper A Plea for Lean Software he attributes it to Martin Reiser.


== See also ==
Extended Backus–Naur Form
Wirth syntax notation
Bucky bit
Wirth–Weber precedence relationship


== References ==


== External links ==
Biography at ETH Zürich.
Personal home page at ETH Zürich.
Niklaus E. Wirth at ACM.
Wirth, Niklaus (April 1971). "Program Development by Stepwise Refinement". Communications of the ACM 14 (4): 221–7. doi:10.1145/362575.362577. 
Wirth, N. (1974). "On the Design of Programming Languages" (PDF). Proc. IFIP Congress 74: 386–393. 
Turing Award Lecture, 1984
Pascal and its Successors paper by Niklaus Wirth – also includes short biography.
A Few Words with Niklaus Wirth
The School of Niklaus Wirth: The Art of Simplicity, by László Böszörményi, Jürg Gutknecht, Gustav Pomberger (editors). dpunkt.verlag / Morgan Kaufmann Publishers, 2000. ISBN 3-932588-85-1 / ISBN 1-55860-723-4.
The book Compiler Construction
The book Algorithms and Data Structures
The book Project Oberon – The Design of an Operating System and Compiler. The book about the Oberon language and Operating System is now available as a PDF file. The PDF file has an additional appendix Ten Years After: From Objects to Components.
Project Oberon 2013